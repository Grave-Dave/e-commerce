// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String?
  phone     String
  address   String
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime    @default(now())
  orderItems  OrderItem[]
}

model Category {
  id               Int        @id @default(autoincrement())
  name             String
  parentCategoryId Int?
  parentCategory   Category?  @relation("ParentChild", fields: [parentCategoryId], references: [id])
  subCategories    Category[] @relation("ParentChild")
  products         Product[]
}

model Order {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  total     Float
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  items     OrderItem[]
  payment   Payment?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
}

model Payment {
  id      Int       @id @default(autoincrement())
  order   Order     @relation(fields: [orderId], references: [id])
  orderId Int       @unique
  amount  Float
  method  String
  status  String
  paidAt  DateTime?
}
